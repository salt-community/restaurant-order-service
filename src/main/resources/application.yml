spring:
  config:
    import: "optional:dotenv:./.env*"
  application:
    name: restaurant-order-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_CONTAINER_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: earliest

app:
  topic:
    order:
      created: ${TOPIC_ORDER_CREATED}
      canceled: ${TOPIC_ORDER_CANCELED}
    payment:
      authorized: ${TOPIC_PAYMENT_AUTHORIZED}
      refund: ${TOPIC_PAYMENT_REFUND}
      failed: ${TOPIC_PAYMENT_FAILED}
    kitchen:
      inProgress: ${TOPIC_KITCHEN_IN_PROGRESS}
      prepared: ${TOPIC_KITCHEN_PREPARED}
      handedOver: ${TOPIC_KITCHEN_HANDED_OVER}
      canceled: ${TOPIC_KITCHEN_CANCELED}
      etaUpdated: ${TOPIC_KITCHEN_ETA_UPDATED}
    delivery:
      assigned: ${TOPIC_DELIVERY_ASSIGNED}
      completed: ${TOPIC_DELIVERY_COMPLETED}



